"""
This type stub file was generated by pyright.
"""

from numba import njit

STUFF_cysax = ...
__author__ = ...
@njit(parallel=True, fastmath=True)
def inv_transform_paa(dataset_paa, original_size): # -> _Array[tuple[int, int, int], float64]:
    """Compute time series corresponding to given PAA representations.

    Parameters
    ----------
    dataset_paa : array-like, shape=(n_ts, sz, d), dtype=float64
        A dataset of PAA series.
    original_size : int32
        Length of the original time series.

    Returns
    -------
    dataset_out : array-like, shape=(n_ts, original_size, d), dtype=float64
        A dataset of time series corresponding to the provided
        representation.
    """
    ...

@njit(parallel=True, fastmath=True)
def cydist_sax(sax1, sax2, breakpoints, original_size): # -> Any:
    """Compute distance between SAX representations as defined in [1]_.

    Parameters
    ----------
    sax1 : array-like, shape=(sz, d), dtype=float64 (Linux and MacOS) or float32 (Windows)
        SAX representation of a time series.
    sax2 : array-like, shape=(sz, d), dtype=float64 (Linux and MacOS) or float32 (Windows)
        SAX representation of another time series.
    breakpoints : array-like, ndim=1, dtype=float64
        The breakpoints used to assign the alphabet symbols.
    original_size : int64 (Linux and MacOS) or int32 (Windows)
        Length of the original time series.

    Returns
    -------
    dist_sax : float64
        SAX distance.

    References
    ----------
    .. [1] J. Lin, E. Keogh, L. Wei, et al. Experiencing SAX: a novel
       symbolic representation of time series.
       Data Mining and Knowledge Discovery, 2007. vol. 15(107)
    """
    ...

@njit(parallel=True, fastmath=True)
def inv_transform_sax(dataset_sax, breakpoints_middle_, original_size): # -> _Array[tuple[int, int, int], float64]:
    """Compute time series corresponding to given SAX representations.

    Parameters
    ----------
    dataset_sax : array-like, shape=(n_ts, sz, d), dtype=float64 (Linux and MacOS) or float32 (Windows)
        A dataset of SAX series.
    breakpoints_middle_ : array-like, ndim=1, dtype=float64
    original_size : int64 (Linux and MacOS) or int32 (Windows)
        Length of the original time series.

    Returns
    -------
    dataset_out : array-like, shape=(n_ts, original_size, d), dtype=float64
    """
    ...

@njit(parallel=True, fastmath=True)
def cyslopes(dataset, t0): # -> _Array[tuple[int, int], float64]:
    """Compute slopes.

    Parameters
    ----------
    dataset : array-like, shape=(n_ts, sz, d), dtype=float64
    t0 : int32

    Returns
    -------
    dataset_out : array-like, shape=(n_ts, d), dtype=float64
    """
    ...

@njit(parallel=True, fastmath=True)
def cydist_1d_sax(sax1, sax2, breakpoints_avg_middle_, breakpoints_slope_middle_, original_size): # -> Any:
    """Compute distance between 1d-SAX representations as defined in [1]_.

    Parameters
    ----------
    sax1 : array-like, shape=(sz, 2 * d), dtype=float64 (Linux and MacOS) or float32 (Windows)
        1d-SAX representation of a time series.
    sax2 : array-like, shape=(sz, 2 * d), dtype=float64 (Linux and MacOS) or float32 (Windows)
        1d-SAX representation of another time series.
    breakpoints_avg_middle_ : array-like, ndim=1, dtype=float64
    breakpoints_slope_middle_ : array-like, ndim=1, dtype=float64
    original_size : int64 (Linux and MacOS) or int32 (Windows)
        Length of the original time series.

    Returns
    -------
    dist_1d_sax : float64
        1d-SAX distance.

    Notes
    -----
    Unlike SAX distance, 1d-SAX distance does not lower bound Euclidean
    distance between original time series.

    References
    ----------
    .. [1] S. Malinowski, T. Guyet, R. Quiniou, R. Tavenard. 1d-SAX: a
       Novel Symbolic Representation for Time Series. IDA 2013.
    """
    ...

@njit(parallel=True, fastmath=True)
def inv_transform_1d_sax(dataset_sax, breakpoints_avg_middle_, breakpoints_slope_middle_, original_size): # -> _Array[tuple[int, int, int], float64]:
    """Compute time series corresponding to given 1d-SAX representations.

    Parameters
    ----------
    dataset_sax : array-like, shape=(n_ts, sz, 2 * d), dtype=float64 (Linux and MacOS) or float32 (Windows)
        A dataset of SAX series.
    breakpoints_avg_middle_ : array-like, ndim=1, dtype=float64
    breakpoints_slope_middle_ : array-like, ndim=1, dtype=float64
    original_size : int64 (Linux and MacOS) or int32 (Windows)
        Length of the original time series.

    Returns
    -------
    dataset_out : array-like, shape=(n_ts, original_size, d), dtype=float64
        A dataset of time series corresponding to the provided
            representation.
    """
    ...

